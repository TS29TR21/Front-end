{"ast":null,"code":"import React,{useState}from'react';// Password Reset Component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordReset=()=>{const[email,setEmail]=useState('');// Handle input change\nconst handleEmailChange=e=>{setEmail(e.target.value);};// Handle form submission for password reset\nconst handleSubmit=async e=>{e.preventDefault();// Perform form validation (e.g., check for empty email)\nif(!email){alert(\"Please enter your email.\");return;}try{const response=await fetch('resetPassword',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()// Adjust based on your CSRF token implementation\n},body:JSON.stringify({email})});if(response.ok){alert('A reset code has been sent to your email.');// Optionally, redirect or reset form if necessary\n}else{alert('Failed to send reset code. Please try again.');}}catch(error){console.error('Error during password reset:',error);alert('An error occurred while sending the reset code.');}};// Function to get CSRF token\nconst getCSRFToken=()=>{var _document$cookie$spli;return(_document$cookie$spli=document.cookie.split('; ').find(item=>item.startsWith('csrftoken=')))===null||_document$cookie$spli===void 0?void 0:_document$cookie$spli.split('=')[1];};return/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[/*#__PURE__*/_jsx(\"h1\",{style:styles.title,children:\"Password Reset\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:styles.form,children:[/*#__PURE__*/_jsx(\"div\",{style:styles.inputGroup,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",value:email,onChange:handleEmailChange,required:true,style:styles.input})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:styles.submitButton,children:\"Get Code\"})]})]});};// Styles for the component\nconst styles={container:{maxWidth:'900px',// Increased width for more horizontal space\nmargin:'auto',padding:'20px',backgroundColor:'#f9f9f9',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0,0,0,0.1)'},title:{textAlign:'center',marginBottom:'20px'},form:{display:'flex',flexDirection:'column'},inputGroup:{marginBottom:'15px'// Margin between input groups\n},input:{padding:'10px',borderRadius:'4px',border:'1px solid #ccc',width:'100%'// Full width for the input\n},submitButton:{padding:'10px',backgroundColor:'#4CAF50',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'}};export default PasswordReset;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","PasswordReset","email","setEmail","handleEmailChange","e","target","value","handleSubmit","preventDefault","alert","response","fetch","method","headers","getCSRFToken","body","JSON","stringify","ok","error","console","_document$cookie$spli","document","cookie","split","find","item","startsWith","style","styles","container","children","title","onSubmit","form","inputGroup","type","placeholder","name","onChange","required","input","submitButton","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","textAlign","marginBottom","display","flexDirection","border","width","color","cursor"],"sources":["J:/Frontend-Project/Front-end/frontend-bananaboat/src/components/reset-password.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Password Reset Component\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Handle input change\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  // Handle form submission for password reset\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Perform form validation (e.g., check for empty email)\r\n    if (!email) {\r\n      alert(\"Please enter your email.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('resetPassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCSRFToken(), // Adjust based on your CSRF token implementation\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('A reset code has been sent to your email.');\r\n        // Optionally, redirect or reset form if necessary\r\n      } else {\r\n        alert('Failed to send reset code. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during password reset:', error);\r\n      alert('An error occurred while sending the reset code.');\r\n    }\r\n  };\r\n\r\n  // Function to get CSRF token\r\n  const getCSRFToken = () => {\r\n    return document.cookie\r\n      .split('; ')\r\n      .find(item => item.startsWith('csrftoken='))\r\n      ?.split('=')[1];\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Password Reset</h1>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <div style={styles.inputGroup}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={styles.submitButton}>Get Code</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles for the component\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '900px', // Increased width for more horizontal space\r\n    margin: 'auto',\r\n    padding: '20px',\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    marginBottom: '20px',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  inputGroup: {\r\n    marginBottom: '15px', // Margin between input groups\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ccc',\r\n    width: '100%', // Full width for the input\r\n  },\r\n  submitButton: {\r\n    padding: '10px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}